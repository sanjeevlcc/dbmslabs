=========USING/Mysql Community/phpadmin/docker==============

-----------------DOCKER------------------------------
step 1: Login with credentials in ... https://killercoda.com/
step 2: Choose any scnerio. Ubuntu or CKA or Playground
step 3: docker run --name mydb1 -e MYSQL_ROOT_PASSWORD=1234 -d mysql
step 4: docker exec -ti mydb1 bash
step 5: mysql -u root -p1234



==============================

=========ISHIKA BATCH=================


create table t2( 
id int not null unique, 
name varchar(20) not null, 
age int not null check(age >=18), 
gender varchar(1) not null, 
phone varchar(10) not null unique, 
city varchar(50) not null default 'butwal' );




-----
insert into t2() values(1, 'Sagaut Kc', 20, 'm', '9875487887', 'bhw');
insert into t2() values(2, 'Manisha Kc', 22, 'f', '9875487881', 'palpa');
insert into t2() values(3, 'Anmol Kc', 25, 'm', '9875487781', 'ktm');
insert into t2() values(4, 'Ishika Paudel', 19, 'f', '1475487781', 'palpa');
insert into t2() values(5, 'Susma Paudel', 18, 'f', '2475487781', 'palpa');
insert into t2() values(6, 'Mausam Basnet', 22, 'm', '975488781', "");
insert into t2(id, name, age, gender,phone) values(7, 'Mausam1 Basnet', 22, 'm', '976488781' );
insert into t2(id, name, age, gender,phone) values(8, 'Pawan Neupane', 22, 'm', '976488782' );




insert into t2() values (9, 'Ashok Gurung', 34, 'm', '9875444887', 'butwal'), (10, 'Om Khattri', 34, 'm', '9875445887', 'bhw'), (11, 'Manoj Marasani', 44, 'm', '9875478887', 'gulmi'), (12, 'BipaniBhandari', 25, 'f', '987897585', 'ktm'), (13, 'Barsa gaha', 22, 'f', '9875487987', 'bhw'), (14, 'Milan Kc', 20, 'm', '987888887', 'palpa'), (15, 'Sagaut Kc2', 45, 'm', '987787887', 'bhw'), (16, 'Bhusan dahal', 65, 'm', '987548999', 'ktm');


select * from t2;


--------------

select * from t2;

select name,city from t2;
select name,age,gender from t2;


select name,age,gender from t2 where gender="m";
select name,age,gender from t2 where gender!="m";



select name,age,city from t2 where city="palpa";
 select name,age,city from t2 where city<>"palpa";




select * from t2 where age>30;
select * from t2 where age<=44;




		AND	OR
0	0	F	F	
0	1	F	T
1	0	F	T
1	1	T	T

select * from t2 where age > 18 and age<44;
select * from t2 where age >= 18 and age < 44;

select * from t2 where age >=15 and age<=50 and city="bhw";



==========================21 Dec 2023==============================================

mysql> CREATE DATABASE IF NOT EXISTS DB2;
mysql> USE DB2;


-- Create the first table
mysql> CREATE TABLE IF NOT EXISTS users (
	user_id INT PRIMARY KEY,     
	username VARCHAR(255) NOT NULL,     
	email VARCHAR(255) UNIQUE NOT NULL );



-- Create the second table
CREATE TABLE IF NOT EXISTS orders (
    order_id INT PRIMARY KEY,
    user_id INT,
    product_name VARCHAR(255) NOT NULL,
    order_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);



-- Insert data into the 'users' table
INSERT INTO users (user_id, username, email) VALUES
(1, 'JohnDoe', 'john.doe@example.com'),
(2, 'JaneSmith', 'jane.smith@example.com'),
(3, 'BobJohnson', 'bob.johnson@example.com'),
(4, 'AliceWilliams', 'alice.williams@example.com'),
(5, 'CharlieBrown', 'charlie.brown@example.com'),
(6, 'EvaDavis', 'eva.davis@example.com'),
(7, 'FrankMiller', 'frank.miller@example.com'),
(8, 'GraceClark', 'grace.clark@example.com'),
(9, 'HenryLee', 'henry.lee@example.com'),
(10, 'IsabelGarcia', 'isabel.garcia@example.com');




mysql> select * from users;
mysql> describe users;


INSERT INTO orders (order_id, user_id, product_name, order_date) VALUES
(101, 1, 'Laptop', '2023-01-15'),
(102, 2, 'Smartphone', '2023-01-16'),
(103, 3, 'Tablet', '2023-01-17'),
(104, 4, 'Camera', '2023-01-18'),
(105, 5, 'Headphones', '2023-01-19'),
(106, 6, 'Monitor', '2023-01-20'),
(107, 7, 'Printer', '2023-01-21'),
(108, 8, 'Keyboard', '2023-01-22'),
(109, 9, 'Mouse', '2023-01-23'),
(110, 10, 'Speakers', '2023-01-24');


mysql> desc orders;
mysql> select * from orders;
+----------+---------+--------------+------------+
| order_id | user_id | product_name | order_date |
+----------+---------+--------------+------------+
|      101 |       1 | Laptop       | 2023-01-15 |
|      102 |       2 | Smartphone   | 2023-01-16 |
|      103 |       3 | Tablet       | 2023-01-17 |
|      104 |       4 | Camera       | 2023-01-18 |
|      105 |       5 | Headphones   | 2023-01-19 |
|      106 |       6 | Monitor      | 2023-01-20 |
|      107 |       7 | Printer      | 2023-01-21 |
|      108 |       8 | Keyboard     | 2023-01-22 |
|      109 |       9 | Mouse        | 2023-01-23 |
|      110 |      10 | Speakers     | 2023-01-24 |
+----------+---------+--------------+------------+









=======JOIN=========
Inner Join:
----------------

mysql> SELECT orders.order_id, users.username, orders.product_name, orders.order_date
    -> FROM orders
    -> INNER JOIN users ON orders.user_id = users.user_id;
+----------+---------------+--------------+------------+
| order_id | username      | product_name | order_date |
+----------+---------------+--------------+------------+
|      101 | JohnDoe       | Laptop       | 2023-01-15 |
|      200 | JohnDoe       | Gun          | 2080-05-11 |
|      102 | JaneSmith     | Smartphone   | 2023-01-16 |
|      103 | BobJohnson    | Tablet       | 2023-01-17 |
|      104 | AliceWilliams | Camera       | 2023-01-18 |
|      105 | CharlieBrown  | Headphones   | 2023-01-19 |
|      106 | EvaDavis      | Monitor      | 2023-01-20 |
|      107 | FrankMiller   | Printer      | 2023-01-21 |
|      108 | GraceClark    | Keyboard     | 2023-01-22 |
|      109 | HenryLee      | Mouse        | 2023-01-23 |
|      110 | IsabelGarcia  | Speakers     | 2023-01-24 |
+----------+---------------+--------------+------------+


Left Join::
----------------
mysql> SELECT users.user_id, users.username, orders.order_id, orders.product_name, orders.order_date
    -> FROM users
    -> LEFT JOIN orders ON users.user_id = orders.user_id;
+---------+---------------+----------+--------------+------------+
| user_id | username      | order_id | product_name | order_date |
+---------+---------------+----------+--------------+------------+
|       1 | JohnDoe       |      101 | Laptop       | 2023-01-15 |
|       1 | JohnDoe       |      200 | Gun          | 2080-05-11 |
|       2 | JaneSmith     |      102 | Smartphone   | 2023-01-16 |
|       3 | BobJohnson    |      103 | Tablet       | 2023-01-17 |
|       4 | AliceWilliams |      104 | Camera       | 2023-01-18 |
|       5 | CharlieBrown  |      105 | Headphones   | 2023-01-19 |
|       6 | EvaDavis      |      106 | Monitor      | 2023-01-20 |
|       7 | FrankMiller   |      107 | Printer      | 2023-01-21 |
|       8 | GraceClark    |      108 | Keyboard     | 2023-01-22 |
|       9 | HenryLee      |      109 | Mouse        | 2023-01-23 |
|      10 | IsabelGarcia  |      110 | Speakers     | 2023-01-24 |
+---------+---------------+----------+--------------+------------+


Right Join: 
----------------
SELECT orders.order_id, users.username, orders.product_name, orders.order_date
FROM orders
RIGHT JOIN users ON orders.user_id = users.user_id;
mysql> SELECT orders.order_id, users.username, orders.product_name, orders.order_date
    -> FROM orders
    -> RIGHT JOIN users ON orders.user_id = users.user_id;
+----------+---------------+--------------+------------+
| order_id | username      | product_name | order_date |
+----------+---------------+--------------+------------+
|      101 | JohnDoe       | Laptop       | 2023-01-15 |
|      200 | JohnDoe       | Gun          | 2080-05-11 |
|      102 | JaneSmith     | Smartphone   | 2023-01-16 |
|      103 | BobJohnson    | Tablet       | 2023-01-17 |
|      104 | AliceWilliams | Camera       | 2023-01-18 |
|      105 | CharlieBrown  | Headphones   | 2023-01-19 |
|      106 | EvaDavis      | Monitor      | 2023-01-20 |
|      107 | FrankMiller   | Printer      | 2023-01-21 |
|      108 | GraceClark    | Keyboard     | 2023-01-22 |
|      109 | HenryLee      | Mouse        | 2023-01-23 |
|      110 | IsabelGarcia  | Speakers     | 2023-01-24 |
+----------+---------------+--------------+------------+










Natural Join: 
----------------

mysql> SELECT * FROM users NATURAL JOIN orders;
+---------+---------------+----------------------------+----------+--------------+------------+
| user_id | username      | email                      | order_id | product_name | order_date |
+---------+---------------+----------------------------+----------+--------------+------------+
|       1 | JohnDoe       | john.doe@example.com       |      101 | Laptop       | 2023-01-15 |
|       1 | JohnDoe       | john.doe@example.com       |      200 | Gun          | 2080-05-11 |
|       2 | JaneSmith     | jane.smith@example.com     |      102 | Smartphone   | 2023-01-16 |
|       3 | BobJohnson    | bob.johnson@example.com    |      103 | Tablet       | 2023-01-17 |
|       4 | AliceWilliams | alice.williams@example.com |      104 | Camera       | 2023-01-18 |
|       5 | CharlieBrown  | charlie.brown@example.com  |      105 | Headphones   | 2023-01-19 |
|       6 | EvaDavis      | eva.davis@example.com      |      106 | Monitor      | 2023-01-20 |
|       7 | FrankMiller   | frank.miller@example.com   |      107 | Printer      | 2023-01-21 |
|       8 | GraceClark    | grace.clark@example.com    |      108 | Keyboard     | 2023-01-22 |
|       9 | HenryLee      | henry.lee@example.com      |      109 | Mouse        | 2023-01-23 |
|      10 | IsabelGarcia  | isabel.garcia@example.com  |      110 | Speakers     | 2023-01-24 |
+---------+---------------+----------------------------+----------+--------------+------------+
11 rows in set (0.00 sec)












**********************************************************************************

-- Create a new database
-----------------------------
CREATE DATABASE  d33;



-- Switch to the newly created database
-----------------------------
USE d33;



-- Create the 'employees' table
-----------------------------
CREATE TABLE  employees (
    employee_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);



-- Create the 'departments' table
-----------------------------
CREATE TABLE  departments (
    department_id INT PRIMARY KEY AUTO_INCREMENT,
    department_name VARCHAR(255) NOT NULL
);



-- Create the 'assignments' table with foreign keys
-----------------------------
CREATE TABLE  assignments (
    assignment_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    department_id INT,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id),
    FOREIGN KEY (department_id) REFERENCES departments(department_id),
    UNIQUE (employee_id, department_id)
);








-- Insert data into the 'employees' table
INSERT INTO employees (employee_name, email) VALUES
('राजेश श्रेष्ठ', 'rajesh.shrestha@example.com'),
('सुजता तिवारी', 'sujata.tiwari@example.com'),
('मनीष शर्मा', 'manish.sharma@example.com'),
('सान्त्वना बस्नेत', 'santvana.basnet@example.com'),
('नीरज भण्डारी', 'neeraj.bhandari@example.com');

-- Insert data into the 'departments' table
INSERT INTO departments (department_name) VALUES
('प्रबन्धन विभाग'),
('पुर्चास विभाग'),
('मानव स्रोत विभाग'),
('प्रदाय विभाग'),
('सॉफ्टवेयर विकास विभाग');

-- Insert data into the 'assignments' table
INSERT INTO assignments (employee_id, department_id) VALUES
(1, 1), -- राजेश श्रेष्ठ - प्रबन्धन विभाग
(2, 2), -- सुजता तिवारी - पुर्चास विभाग
(3, 3), -- मनीष शर्मा - मानव स्रोत विभाग
(4, 4), -- सान्त्वना बस्नेत - प्रदाय विभाग
(5, 5); -- नीरज भण्डारी - सॉफ्टवेयर विकास विभाग



-------------
mysql> DELETE FROM assignments;
Query OK, 5 rows affected (0.01 sec)

mysql> DELETE FROM employees;
Query OK, 6 rows affected (0.01 sec)

mysql> DELETE FROM departments;
Query OK, 5 rows affected (0.01 sec)
--------------

-- Insert data into the 'employees' table
INSERT INTO employees (employee_name, email) VALUES
('Ram Shrestha', 'ram.shrestha@example.com'),
('Sita Tiwari', 'sita.tiwari@example.com'),
('Manish Sharma', 'manish.sharma@example.com');

-- Insert data into the 'departments' table
INSERT INTO departments (department_name) VALUES
('Management Department'),
('Purchasing Department'),
('Human Resources Department');

-- Insert data into the 'assignments' table
INSERT INTO assignments (employee_id, department_id) VALUES
(11, 12), -- Ram Shrestha assigned to Management Department
(12, 13), -- Sita Tiwari assigned to Purchasing Department
(13, 14); -- Manish Sharma assigned to Human Resources Department

=======




-- Create a new database
-----------------------------
CREATE DATABASE  d33;



-- Switch to the newly created database
-----------------------------
USE d33;



-- Create the 'employees' table
-----------------------------
CREATE TABLE  employees (
    employee_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);



-- Create the 'departments' table
-----------------------------
CREATE TABLE  departments (
    department_id INT PRIMARY KEY AUTO_INCREMENT,
    department_name VARCHAR(255) NOT NULL
);



-- Create the 'assignments' table with foreign keys
-----------------------------
CREATE TABLE  assignments (
    assignment_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT,
    department_id INT,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id),
    FOREIGN KEY (department_id) REFERENCES departments(department_id),
    UNIQUE (employee_id, department_id)
);








-- Insert data into the 'employees' table
INSERT INTO employees (employee_name, email) VALUES
('राजेश श्रेष्ठ', 'rajesh.shrestha@example.com'),
('सुजता तिवारी', 'sujata.tiwari@example.com'),
('मनीष शर्मा', 'manish.sharma@example.com'),
('सान्त्वना बस्नेत', 'santvana.basnet@example.com'),
('नीरज भण्डारी', 'neeraj.bhandari@example.com');

-- Insert data into the 'departments' table
INSERT INTO departments (department_name) VALUES
('प्रबन्धन विभाग'),
('पुर्चास विभाग'),
('मानव स्रोत विभाग'),
('प्रदाय विभाग'),
('सॉफ्टवेयर विकास विभाग');

-- Insert data into the 'assignments' table
INSERT INTO assignments (employee_id, department_id) VALUES
(1, 1), -- राजेश श्रेष्ठ - प्रबन्धन विभाग
(2, 2), -- सुजता तिवारी - पुर्चास विभाग
(3, 3), -- मनीष शर्मा - मानव स्रोत विभाग
(4, 4), -- सान्त्वना बस्नेत - प्रदाय विभाग
(5, 5); -- नीरज भण्डारी - सॉफ्टवेयर विकास विभाग



-------------
mysql> DELETE FROM assignments;
Query OK, 5 rows affected (0.01 sec)

mysql> DELETE FROM employees;
Query OK, 6 rows affected (0.01 sec)

mysql> DELETE FROM departments;
Query OK, 5 rows affected (0.01 sec)
--------------

-- Insert data into the 'employees' table
INSERT INTO employees (employee_name, email) VALUES
('Ram Shrestha', 'ram.shrestha@example.com'),
('Sita Tiwari', 'sita.tiwari@example.com'),
('Manish Sharma', 'manish.sharma@example.com');

-- Insert data into the 'departments' table
INSERT INTO departments (department_name) VALUES
('Management Department'),
('Purchasing Department'),
('Human Resources Department');

-- Insert data into the 'assignments' table
INSERT INTO assignments (employee_id, department_id) VALUES
(11, 12), -- Ram Shrestha assigned to Management Department
(12, 13), -- Sita Tiwari assigned to Purchasing Department
(13, 14); -- Manish Sharma assigned to Human Resources Department

=======


















-- Create a new database
CREATE DATABASE IF NOT EXISTS school_database;

-- Switch to the newly created database
USE school_database;

-- Create the 'students' table
CREATE TABLE  students (
    std_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    mobile VARCHAR(15),
    gender VARCHAR(10),
    address VARCHAR(255),
    DOB DATE,
    salary DECIMAL(10, 2),
    marks_social INT,
    marks_maths INT
);










-- Insert 25 rows of data into the 'students' table
INSERT INTO students (name, mobile, gender, address, DOB, salary, marks_social, marks_maths) VALUES
('Amit Poudel', '9841000000', 'Male', 'Kathmandu, Nepal', '1998-05-15', 50000.00, 85, 90),
('Sarita Gurung', '9812345678', 'Female', 'Pokhara, Nepal', '1999-08-20', 45000.00, 78, 92),
('Rajesh Dhakal', '9865432109', 'Male', 'Butwal, Nepal', '1997-12-10', 55000.00, 92, 88),
('Anita Rai', '9809876543', 'Female', 'Dharan, Nepal', '2000-03-25', 48000.00, 75, 85),
('Santosh Shrestha', '9856789012', 'Male', 'Biratnagar, Nepal', '1996-09-02', 60000.00, 89, 94),
('Pratima Khadka', '9843210987', 'Female', 'Butwal, Nepal', '1999-11-18', 52000.00, 80, 91),
('Nabin Thapa', '9811001100', 'Male', 'Pokhara, Nepal', '1997-07-07', 53000.00, 88, 89),
('Rita Maharjan', '9867543210', 'Female', 'Lalitpur, Nepal', '2001-02-14', 47000.00, 82, 93),
('Sunil Bhandari', '9856781234', 'Male', 'Birgunj, Nepal', '1998-04-30', 56000.00, 91, 87),
('Priya Sharma', '9812345678', 'Female', 'Dang, Nepal', '1996-12-12', 51000.00, 79, 92),
('Dinesh Thapa', '9845678901', 'Male', 'Itahari, Nepal', '2000-08-05', 54000.00, 87, 90),
('Puja Adhikari', '9812345678', 'Female', 'Nepalgunj, Nepal', '1999-01-22', 49000.00, 76, 88),
('Roshan Shrestha', '9861234567', 'Male', 'Hetauda, Nepal', '1997-06-14', 58000.00, 90, 85),
('Anju Bista', '9841001100', 'Female', 'Butwal, Nepal', '1998-10-11', 50000.00, 83, 94),
('Binod Khanal', '9812345678', 'Male', 'Chitwan, Nepal', '1996-03-28', 59000.00, 92, 87),
('Sunita Regmi', '9856789012', 'Female', 'Dharan, Nepal', '1997-09-15', 48000.00, 84, 89),
('Rajendra Shrestha', '9843210987', 'Male', 'Nepalgunj, Nepal', '2000-01-10', 55000.00, 88, 91),
('Gita Lama', '9811001100', 'Female', 'Biratnagar, Nepal', '1998-11-23', 51000.00, 79, 93),
('Suman Magar', '9867543210', 'Male', 'Lalitpur, Nepal', '1999-05-19', 53000.00, 86, 90),
('Anita Tamang', '9856781234', 'Female', 'Hetauda, Nepal', '1997-02-08', 47000.00, 81, 92),
('Suresh KC', '9812345678', 'Male', 'Chitwan, Nepal', '1998-07-03', 56000.00, 89, 88),
('Manisha Thapa', '9845678901', 'Female', 'Birgunj, Nepal', '2001-04-15', 49000.00, 77, 94),
('Ramesh Aryal', '9812345678', 'Male', 'Dang, Nepal', '1999-10-20', 52000.00, 87, 86),
('Laxmi Bhandari', '9861234567', 'Female', 'Itahari, Nepal', '1996-12-28', 57000.00, 90, 87);



Basics:
Retrieve all students' names and their marks in social:
SELECT name, marks_social FROM students;


Insert a new student:
INSERT INTO students (name, mobile, gender, address, DOB, salary, marks_social, marks_maths)
VALUES ('Nisha Adhikari', '9876543210', 'Female', 'Biratnagar, Nepal', '1998-06-25', 52000.00, 85, 88);

Update the address for a specific student:
UPDATE students SET address = 'Kathmandu, Nepal' WHERE name = 'Amit Poudel';


Delete a student record:
DELETE FROM students WHERE name = 'Sarita Gurung';



Intermediate:
Retrieve the average salary of male students:
SELECT AVG(salary) AS avg_salary_male FROM students WHERE gender = 'Male';


Find students who scored more than 90 in either social or maths:
SELECT name FROM students WHERE marks_social > 90 OR marks_maths > 90;



Retrieve the list of students and their assigned department (assuming there's a related department table):

sql
Copy code
SELECT students.name, assignments.department_id, departments.department_name
FROM students
LEFT JOIN assignments ON students.std_id = assignments.student_id
LEFT JOIN departments ON assignments.department_id = departments.department_id;
Advanced:
Create a stored procedure to update student marks:

sql
Copy code
DELIMITER //
CREATE PROCEDURE UpdateStudentMarks(IN student_id INT, IN new_marks_social INT, IN new_marks_maths INT)
BEGIN
    UPDATE students SET marks_social = new_marks_social, marks_maths = new_marks_maths WHERE std_id = student_id;
END //
DELIMITER ;
Start a transaction to update salary and marks together:

sql
Copy code
START TRANSACTION;
UPDATE students SET salary = salary * 1.1 WHERE gender = 'Male';
UPDATE students SET marks_maths = marks_maths + 5;
COMMIT;
Grant read-only access to a specific user:

sql
Copy code
GRANT SELECT ON school_database.students TO 'read_only_user'@'localhost';
Retrieve the top 5 students with the highest combined marks:

sql
Copy code
SELECT name, marks_social + marks_maths AS total_marks
FROM students
ORDER BY total_marks DESC
LIMIT 5;



