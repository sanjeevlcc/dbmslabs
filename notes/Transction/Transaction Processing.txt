

==========================================================================
Transaction Processing, Concurrency Control and Recovery Techniques
==========================================================================

SYLLABUS
------------------
        Introduction to Transaction Processing: 
        Transaction and System Concepts,
        Desirable Properties of Transactions: 
        Serializable Schedule: 
        Two-Phase Locking and Timestamp Ordering Concurrency Control Techniques 
        Recovery Concepts, 
        NO- UNDO REDO Recovery Based on Deferred Update,
        Recovery Technique Based on Immediate Update: 
        Shadow Paging:
        Database Backup and Recovery from Catastroplac Failures









==========================================================================
 Introduction to Transaction Processing
==========================================================================


Transaction processing is a fundamental aspect of modern database systems, 
facilitating the reliable and efficient management of data in various 
applications. 

In this context, a transaction refers to a logical unit of work
that consists of one or more database operations, such as reads, writes,
or updates. 

These operations are typically performed as a single, indivisible unit 
to maintain data integrity and consistency.

Transaction processing systems (TPS) are responsible for 
executing and managing transactions in a reliable and efficient manner.








==========================================================================
Transaction and System Concepts
==========================================================================


ACID
------

      Atomicity:
      ---------------
          Transactions should exhibit the atomicity property, meaning 
          that either all the operations within a transaction are 
          executed successfully, or none of them are. 
          
          In other words, transactions are indivisible and 
          should be treated as all or nothing.
      
      Consistency:
      ---------------
          Transactions should leave the database in a consistent 
          state, adhering to all integrity constraints and business rules. 
          Consistency ensures that the database transitions from one
          valid state to another valid state after each transaction.
      
      Isolation: 
      ---------------
          Each transaction should be isolated from other transactions
          executing concurrently. 
          
          Isolation ensures that the intermediate states of transactions
          are not visible to other transactions until they are committed. 
          This prevents interference and maintains data integrity.
      
      Durability: 
      ---------------
          Once a transaction is committed, its effects should be 
          permanently stored in the database and should not be lost, 
          even in the event of system failures. 
          
          Durability guarantees that committed transactions survive 
          system crashes or other failures.







    +------------------+            +------------------+
    |      Read A      |            |      Read B      |
    +------------------+            +------------------+
           |   A=1500                  |   B=1200
           |                           |
           |                           |
    +-------------------+           +-------------------+
    |    Write A (A-300)|           |   Write B (B+300)|
    +-------------------+           +-------------------+
           |   A=1200                  |   B=1500
           |                           |
           |                           |
           +---------------------------+
                         |
                         |
                  +--------------+
                  |   Commit     |
                  +--------------+

        In this example:
        --------------
                "Read A" reads the current value of A (1500).
                "Read B" reads the current value of B (1200).
                "Write A" subtracts 300 from A (A=1200).
                "Write B" adds 300 to B (B=1500).
                Finally, the "Commit" operation makes the changes permanent.



==========================================================================
Desirable Properties of Transactions
==========================================================================



Desirable Properties of Transactions:
---------------------------------------------



ACID Properties: 
---------------
    The desirable properties of transactions are often 
    summarized using the acronym ACID:
    
    Atomicity: 
        Transactions are all-or-nothing operations.
    Consistency: 
        Transactions preserve the consistency of the database.
    Isolation: 
        Transactions execute independently of each other and do not interfere.
    Durability: 
        Committed transactions persist even in the face of system failures.




Concurrency Control:
------------------------------
    Effective concurrency control mechanisms are essential for
    managing concurrent execution of transactions while preserving
    consistency and isolation. 
    
    Techniques such as locking, timestamp ordering, and multi-version 
    concurrency control are commonly employed to ensure correct interleaving
    of transactions.



Recovery Management: 
------------------------------
    Robust recovery mechanisms are necessary to restore the database to
    a consistent state after system failures. 
    
    This involves techniques such as logging changes to the database,
    maintaining a write-ahead log, and performing recovery procedures 
    such as rollbacks or roll-forwards.



High Availability: 
------------------------------
    Transaction processing systems should aim to achieve high 
    availability to ensure continuous access to data and
    uninterrupted operation, even in the face of hardware 
    failures, network issues, or other disruptions. 
    
    Redundancy, failover mechanisms, and disaster recovery plans 
    contribute to achieving high availability.



Scalability: 
------------------------------
    Transaction processing systems should be designed to scale 
    efficiently to handle increasing workloads and growing datasets. 
    
    Scalability can be achieved through techniques such as sharding, 
    replication, and vertical or horizontal scaling of hardware resources.









==========================================================================
Concepts of read, write, commit, and rollback in the
context of database transactions
==========================================================================

+------------------------+  +------------+  +------------------+
|          CPU           |  |    RAM     |  |    Hard Disk     |
+------------------------+  +------------+  +------------------+


+------------------------+         +------------+        +------------------+
|          CPU           | <====   |    RAM     |  <==== |    Hard Disk     |
+------------------------+         +------------+        +------------------+


+------------------------+         +------------+        +------------------+
|          CPU           | ====>   |    RAM     |  ====> |    Hard Disk     |
+------------------------+         +------------+        +------------------+




Read: 
------
        In a database transaction, a read operation involves 
        retrieving data from the database without making 
        any changes to it. 
        
        Reads are typically performed to access existing 
        data for processing or display purposes. 
        
        For example, a SELECT query in SQL is a 
        read operation that retrieves data from 
        the database tables.

Write: 
---------
        A write operation in a database transaction involves 
        modifying data in the database. 
        
        This modification could be inserting new records, updating 
        existing records, or deleting records from the database tables.
        
        For example, INSERT, UPDATE, and DELETE statements 
        in SQL are write operations that modify data in 
        the database.



Rollback: 
-----------
        Rolling back a transaction means undoing all the changes 
        made by the transaction and restoring the database to 
        its state before the transaction began. 
        
        This operation is typically used to discard the effects
        of a transaction that encountered an error or did 
        not complete successfully. 
        
        Rolling back ensures that the database remains in 
        a consistent state and that incomplete or erroneous 
        transactions do not leave behind any unintended changes. 
        
        In most database systems, the ROLLBACK statement is
        used to initiate a rollback of a transaction.


Commit: 
--------
        Committing a transaction in a database context means
        making all the changes performed within the transaction
        permanent and visible to other transactions. 
        
        Once a transaction is committed, its effects are durable 
        and cannot be undone. 
        
        Committing ensures that the changes made by the transaction 
        are preserved even in the event of system failures. 
        
        In many database systems, the COMMIT statement is used to
        finalize and commit a transaction.






==========================================================================

==========================================================================




==========================================================================

==========================================================================








==========================================================================

==========================================================================


==========================================================================

==========================================================================

 
Serializable Schedule: 
Two-Phase Locking and Timestamp Ordering Concurrency Control Techniques 
Recovery Concepts, 
NO- UNDO REDO Recovery Based on Deferred Update,
Recovery Technique Based on Immediate Update: 
Shadow Paging:
Database Backup and Recovery from Catastroplac Failures


==========================================================================

==========================================================================








==========================================================================

==========================================================================




==========================================================================

==========================================================================








==========================================================================

==========================================================================




==========================================================================

==========================================================================








==========================================================================

==========================================================================




==========================================================================

==========================================================================








==========================================================================

==========================================================================




==========================================================================

==========================================================================








==========================================================================

==========================================================================




==========================================================================

==========================================================================








==========================================================================

==========================================================================




==========================================================================

==========================================================================








==========================================================================

==========================================================================


