


********************************************************************************
LAB 1 Optimize a Complex Query
********************************************************************************
docker run -d --name my_mysql -e MYSQL_ROOT_PASSWORD=1234 -p 3306:3306 mysql:latest

docker exec -it my_mysql mysql -uroot -p1234

          Create a Sample Database:
          ------------------------------
CREATE DATABASE optimization_demo;
USE optimization_demo;




          Create Tables and Insert Sample Data:
           ------------------------------

CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE posts (
    post_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    content TEXT,
    user_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

INSERT INTO users (username, email) VALUES
    ('user1', 'user1@example.com'),
    ('user2', 'user2@example.com');

INSERT INTO posts (title, content, user_id) VALUES
    ('Post 1', 'Content of post 1', 1),
    ('Post 2', 'Content of post 2', 2);


mysql> select * from posts;
+---------+--------+-------------------+---------+---------------------+
| post_id | title  | content           | user_id | created_at          |
+---------+--------+-------------------+---------+---------------------+
|       1 | Post 1 | Content of post 1 |       1 | 2024-02-27 09:21:56 |
|       2 | Post 2 | Content of post 2 |       2 | 2024-02-27 09:21:56 |
+---------+--------+-------------------+---------+---------------------+

mysql> select * from users;
+---------+----------+-------------------+
| user_id | username | email             |
+---------+----------+-------------------+
|       1 | user1    | user1@example.com |
|       2 | user2    | user2@example.com |
+---------+----------+-------------------+






                Optimize a Complex Query
                ------------------------------


                Create a Complex Query:
                ------------------------------
SELECT users.username, posts.title, posts.content
FROM users
INNER JOIN posts ON users.user_id = posts.user_id
WHERE users.username = 'user1' AND posts.title LIKE '%Post%';

+----------+--------+-------------------+
| username | title  | content           |
+----------+--------+-------------------+
| user1    | Post 1 | Content of post 1 |
+----------+--------+-------------------+


                        Analyze Execution Plan:
                        ------------------------------
Analyze the output of the EXPLAIN statement to understand the 
execution plan and identify potential optimization opportunities.



EXPLAIN SELECT users.username, posts.title, posts.content
FROM users
INNER JOIN posts ON users.user_id = posts.user_id
WHERE users.username = 'user1' AND posts.title LIKE '%Post%';
+----+-------------+-------+------------+------+----------------------+--------------+---------+----------------------------------+------+----------+-------------+
| id | select_type | table | partitions | type | possible_keys        | key          | key_len | ref                              | rows | filtered | Extra       |
+----+-------------+-------+------------+------+----------------------+--------------+---------+----------------------------------+------+----------+-------------+
|  1 | SIMPLE      | users | NULL       | ref  | PRIMARY,idx_username | idx_username | 202     | const                            |    1 |   100.00 | Using index |
|  1 | SIMPLE      | posts | NULL       | ref  | user_id              | user_id      | 5       | performance_tuning.users.user_id |    1 |    50.00 | Using where |
+----+-------------+-------+------------+------+----------------------+--------------+---------+----------------------------------+------+----------+-------------+


                      Optimize the Query:
                      ------------------------------
Consider creating indexes on columns used in JOIN and WHERE clauses.
Rewrite the query to use covered indexes where possible.
Experiment with different indexing strategies to improve performance.


                      Run Optimized Query:
                      ------------------------------
Run the optimized query and compare the execution time with the original query.






********************************************************************************
LAB 2
********************************************************************************

Partitioning involves dividing a large table or index into 
smaller, more manageable pieces called partitions based 
on a chosen criterion, such as a range of values, a list, or a 
hash function.

Example (Range Partitioning):

CREATE TABLE sales (
    sale_id INT PRIMARY KEY,
    sale_date DATE,
    amount DECIMAL(10,2)
) PARTITION BY RANGE (YEAR(sale_date)) (
    PARTITION p0 VALUES LESS THAN (1991),
    PARTITION p1 VALUES LESS THAN (1992),
    PARTITION p2 VALUES LESS THAN (1993),
    PARTITION p3 VALUES LESS THAN (1994),
    PARTITION p4 VALUES LESS THAN (1995),
    PARTITION p5 VALUES LESS THAN (1996),
    PARTITION p6 VALUES LESS THAN (1997),
    PARTITION p7 VALUES LESS THAN (1998),
    PARTITION p8 VALUES LESS THAN (1999),
    PARTITION p9 VALUES LESS THAN MAXVALUE
);


Sharding:

Sharding involves horizontally partitioning data across multiple database instances or servers. Each shard contains a subset of the entire dataset.

Example (Hash-Based Sharding):

-- Shard 1
CREATE TABLE users_shard1 (
    user_id INT PRIMARY KEY,
    username VARCHAR(50)
);

-- Shard 2
CREATE TABLE users_shard2 (
    user_id INT PRIMARY KEY,
    username VARCHAR(50)
);

-- Shard 3
CREATE TABLE users_shard3 (
    user_id INT PRIMARY KEY,
    username VARCHAR(50)
);

----------------------------
































********************************************************************************
LAB 3
********************************************************************************


-- Create Hospital Management System (HMS) database
CREATE DATABASE HospitalManagementSystem;
USE HospitalManagementSystem;

-- Create the Hospital table
CREATE TABLE Hospital (
    PatientID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Age INT,
    Gender VARCHAR(10),
    Diagnosis VARCHAR(100),
    RoomNumber INT
);

-- Create Student Management System (SMS) database
CREATE DATABASE StudentManagementSystem;
USE StudentManagementSystem;

-- Create the Student table
CREATE TABLE Student (
    StudentID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Age INT,
    Gender VARCHAR(10),
    Major VARCHAR(50)
);










-- Insert 10 records into the Hospital table
INSERT INTO Hospital VALUES
(1, 'John', 'Doe', 35, 'Male', 'Appendicitis', 101),
(2, 'Jane', 'Smith', 42, 'Female', 'Fractured Arm', 205),
(3, 'Mike', 'Johnson', 28, 'Male', 'Influenza', 303),
(4, 'Emily', 'Williams', 55, 'Female', 'Diabetes', 402),
(5, 'David', 'Brown', 47, 'Male', 'Hypertension', 105),
(6, 'Anna', 'Miller', 32, 'Female', 'Migraine', 201),
(7, 'Brian', 'Jones', 25, 'Male', 'Sprained Ankle', 304),
(8, 'Sophia', 'Davis', 38, 'Female', 'Pneumonia', 102),
(9, 'Daniel', 'Clark', 43, 'Male', 'Heart Attack', 401),
(10, 'Olivia', 'Taylor', 29, 'Female', 'Allergy', 203);








-- Insert 10 records into the Student table
INSERT INTO Student VALUES
(101, 'Alice', 'Johnson', 20, 'Female', 'Computer Science'),
(102, 'Bob', 'Smith', 22, 'Male', 'Electrical Engineering'),
(103, 'Catherine', 'Brown', 21, 'Female', 'Psychology'),
(104, 'David', 'White', 23, 'Male', 'Mechanical Engineering'),
(105, 'Eva', 'Williams', 19, 'Female', 'Biology'),
(106, 'Frank', 'Jones', 24, 'Male', 'Chemistry'),
(107, 'Grace', 'Davis', 20, 'Female', 'Business Administration'),
(108, 'Harry', 'Clark', 22, 'Male', 'Political Science'),
(109, 'Isabel', 'Taylor', 21, 'Female', 'Mathematics'),
(110, 'Jack', 'Miller', 23, 'Male', 'Physics');






mysql> select * from HospitalManagementSystem.Hospital;
+-----------+-----------+----------+------+--------+----------------+------------+
| PatientID | FirstName | LastName | Age  | Gender | Diagnosis      | RoomNumber |
+-----------+-----------+----------+------+--------+----------------+------------+
|         1 | John      | Doe      |   35 | Male   | Appendicitis   |        101 |
|         2 | Jane      | Smith    |   42 | Female | Fractured Arm  |        205 |
|         3 | Mike      | Johnson  |   28 | Male   | Influenza      |        303 |
|         4 | Emily     | Williams |   55 | Female | Diabetes       |        402 |
|         5 | David     | Brown    |   47 | Male   | Hypertension   |        105 |
|         6 | Anna      | Miller   |   32 | Female | Migraine       |        201 |
|         7 | Brian     | Jones    |   25 | Male   | Sprained Ankle |        304 |
|         8 | Sophia    | Davis    |   38 | Female | Pneumonia      |        102 |
|         9 | Daniel    | Clark    |   43 | Male   | Heart Attack   |        401 |
|        10 | Olivia    | Taylor   |   29 | Female | Allergy        |        203 |
+-----------+-----------+----------+------+--------+----------------+------------




mysql> select * from StudentManagementSystem.Student;
+-----------+-----------+----------+------+--------+-------------------------+
| StudentID | FirstName | LastName | Age  | Gender | Major                   |
+-----------+-----------+----------+------+--------+-------------------------+
|       101 | Alice     | Johnson  |   20 | Female | Computer Science        |
|       102 | Bob       | Smith    |   22 | Male   | Electrical Engineering  |
|       103 | Catherine | Brown    |   21 | Female | Psychology              |
|       104 | David     | White    |   23 | Male   | Mechanical Engineering  |
|       105 | Eva       | Williams |   19 | Female | Biology                 |
|       106 | Frank     | Jones    |   24 | Male   | Chemistry               |
|       107 | Grace     | Davis    |   20 | Female | Business Administration |
|       108 | Harry     | Clark    |   22 | Male   | Political Science       |
|       109 | Isabel    | Taylor   |   21 | Female | Mathematics             |
|       110 | Jack      | Miller   |   23 | Male   | Physics                 |
+-----------+-----------+----------+------+--------+-------------------------+







-- Create Users
mysql> CREATE USER 'sanjeev'@'localhost' IDENTIFIED BY 'password1';
Query OK, 0 rows affected (0.05 sec)

mysql> CREATE USER 'ohm'@'localhost' IDENTIFIED BY 'password2';
Query OK, 0 rows affected (0.04 sec)

mysql> CREATE USER 'ashok'@'localhost' IDENTIFIED BY 'password3';
Query OK, 0 rows affected (0.04 sec)

mysql> CREATE USER 'manoj'@'localhost' IDENTIFIED BY 'password4';
Query OK, 0 rows affected (0.03 sec);

.
mysql> SELECT user FROM mysql.user;
                    +------------------+
                    | user             |
                    +------------------+
                    | root             |
                    | ashok            |
                    | manoj            |
                    | mysql.infoschema |
                    | mysql.session    |
                    | mysql.sys        |
                    | ohm              |
                    | root             |
                    | sanjeev          |
                    +------------------+



mysql> SELECT COUNT(user) AS total_users FROM mysql.user;
+-------------+
| total_users |
+-------------+
|           9 |
+-------------+
1 row in set (0.02 sec)




USE HospitalManagementSystem;
-----------------------------------

-- Grant SELECT privilege to Sanjeev on Hospital table
mysql> GRANT SELECT ON Hospital TO 'sanjeev'@'localhost';
Query OK, 0 rows affected, 1 warning (0.03 sec


-- Grant INSERT and UPDATE privileges to Ohm on Hospital table
mysql> GRANT INSERT, UPDATE ON Hospital TO 'ohm'@'localhost';
Query OK, 0 rows affected, 1 warning (0.12 sec)

-- Grant DELETE privilege to Ashok on Hospital table
mysql> GRANT DELETE ON Hospital TO 'ashok'@'localhost';
Query OK, 0 rows affected, 1 warning (0.03 sec)

-- Grant ALL privileges to Manoj on Hospital table
mysql> GRANT ALL ON Hospital TO 'manoj'@'localhost';
Query OK, 0 rows affected, 1 warning (0.06 sec)







USE StudentManagementSystem;
----------------------------------
-- Grant SELECT privilege to Sanjeev on Student table
GRANT SELECT ON Student TO 'sanjeev'@'localhost';

-- Grant INSERT and UPDATE privileges to Ohm on Student table
GRANT INSERT, UPDATE ON Student TO 'ohm'@'localhost';

-- Grant DELETE privilege to Ashok on Student table
GRANT DELETE ON Student TO 'ashok'@'localhost';

-- Grant ALL privileges to Manoj on Student table
GRANT ALL ON Student TO 'manoj'@'localhost';




********************************************************************************
LAB 4
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************



********************************************************************************
LAB 1
********************************************************************************











